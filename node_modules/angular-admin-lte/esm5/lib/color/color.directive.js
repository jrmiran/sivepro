/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Directive, Input, Renderer2, ElementRef } from '@angular/core';
import { ColorService } from './color.service';
var BackgroundColorDirective = /** @class */ (function () {
    /**
     * @method constructor
     * @param elementRef   [description]
     * @param renderer2    [description]
     * @param colorService [description]
     */
    function BackgroundColorDirective(elementRef, renderer2, colorService) {
        this.elementRef = elementRef;
        this.renderer2 = renderer2;
        this.colorService = colorService;
        this.condition = true;
    }
    Object.defineProperty(BackgroundColorDirective.prototype, "color", {
        set: /**
         * @param {?} color
         * @return {?}
         */
        function (color) {
            this.colorService.setBackgroundColor(color, this.condition, this.property, this.prefix);
        },
        enumerable: true,
        configurable: true
    });
    BackgroundColorDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[mkColor]',
                    providers: [ColorService]
                },] },
    ];
    BackgroundColorDirective.ctorParameters = function () { return [
        { type: ElementRef },
        { type: Renderer2 },
        { type: ColorService }
    ]; };
    BackgroundColorDirective.propDecorators = {
        condition: [{ type: Input, args: ['mkColorCondition',] }],
        prefix: [{ type: Input, args: ['mkColorPrefix',] }],
        property: [{ type: Input, args: ['mkColorProperty',] }],
        color: [{ type: Input, args: ['mkColor',] }]
    };
    return BackgroundColorDirective;
}());
export { BackgroundColorDirective };
if (false) {
    /** @type {?} */
    BackgroundColorDirective.prototype.condition;
    /** @type {?} */
    BackgroundColorDirective.prototype.prefix;
    /** @type {?} */
    BackgroundColorDirective.prototype.property;
    /**
     * @type {?}
     * @private
     */
    BackgroundColorDirective.prototype.elementRef;
    /**
     * @type {?}
     * @private
     */
    BackgroundColorDirective.prototype.renderer2;
    /**
     * @type {?}
     * @private
     */
    BackgroundColorDirective.prototype.colorService;
}
var ColorDirective = /** @class */ (function () {
    /**
     * @method constructor
     * @param elementRef   [description]
     * @param renderer2    [description]
     * @param colorService [description]
     */
    function ColorDirective(elementRef, renderer2, colorService) {
        this.elementRef = elementRef;
        this.renderer2 = renderer2;
        this.colorService = colorService;
    }
    Object.defineProperty(ColorDirective.prototype, "color", {
        set: /**
         * @param {?} color
         * @return {?}
         */
        function (color) {
            this.colorService.setFontColor(color);
        },
        enumerable: true,
        configurable: true
    });
    ColorDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[mkFontColor]',
                    providers: [ColorService]
                },] },
    ];
    ColorDirective.ctorParameters = function () { return [
        { type: ElementRef },
        { type: Renderer2 },
        { type: ColorService }
    ]; };
    ColorDirective.propDecorators = {
        color: [{ type: Input, args: ['mkFontColor',] }]
    };
    return ColorDirective;
}());
export { ColorDirective };
if (false) {
    /**
     * @type {?}
     * @private
     */
    ColorDirective.prototype.elementRef;
    /**
     * @type {?}
     * @private
     */
    ColorDirective.prototype.renderer2;
    /**
     * @type {?}
     * @private
     */
    ColorDirective.prototype.colorService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29sb3IuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vYW5ndWxhci1hZG1pbi1sdGUvIiwic291cmNlcyI6WyJsaWIvY29sb3IvY29sb3IuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRXhFLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUUvQztJQUtFOzs7OztPQUtHO0lBQ0gsa0NBQ1UsVUFBc0IsRUFDdEIsU0FBb0IsRUFDcEIsWUFBMEI7UUFGMUIsZUFBVSxHQUFWLFVBQVUsQ0FBWTtRQUN0QixjQUFTLEdBQVQsU0FBUyxDQUFXO1FBQ3BCLGlCQUFZLEdBQVosWUFBWSxDQUFjO1FBR1QsY0FBUyxHQUFHLElBQUksQ0FBQztJQUZ6QyxDQUFDO0lBS0osc0JBQXNCLDJDQUFLOzs7OztRQUEzQixVQUE0QixLQUFhO1lBQ3ZDLElBQUksQ0FBQyxZQUFZLENBQUMsa0JBQWtCLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxTQUFTLEVBQUUsSUFBSSxDQUFDLFFBQVEsRUFBRSxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDMUYsQ0FBQzs7O09BQUE7O2dCQXRCRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLFdBQVc7b0JBQ3JCLFNBQVMsRUFBRSxDQUFDLFlBQVksQ0FBQztpQkFDMUI7OztnQkFQcUMsVUFBVTtnQkFBckIsU0FBUztnQkFFM0IsWUFBWTs7OzRCQW1CbEIsS0FBSyxTQUFDLGtCQUFrQjt5QkFDeEIsS0FBSyxTQUFDLGVBQWU7MkJBQ3JCLEtBQUssU0FBQyxpQkFBaUI7d0JBQ3ZCLEtBQUssU0FBQyxTQUFTOztJQUdsQiwrQkFBQztDQUFBLEFBdkJELElBdUJDO1NBbkJZLHdCQUF3Qjs7O0lBYW5DLDZDQUE0Qzs7SUFDNUMsMENBQXVDOztJQUN2Qyw0Q0FBMkM7Ozs7O0lBUHpDLDhDQUE4Qjs7Ozs7SUFDOUIsNkNBQTRCOzs7OztJQUM1QixnREFBa0M7O0FBV3RDO0lBS0U7Ozs7O09BS0c7SUFDSCx3QkFDVSxVQUFzQixFQUN0QixTQUFvQixFQUNwQixZQUEwQjtRQUYxQixlQUFVLEdBQVYsVUFBVSxDQUFZO1FBQ3RCLGNBQVMsR0FBVCxTQUFTLENBQVc7UUFDcEIsaUJBQVksR0FBWixZQUFZLENBQWM7SUFDakMsQ0FBQztJQUVKLHNCQUEwQixpQ0FBSzs7Ozs7UUFBL0IsVUFBZ0MsS0FBYTtZQUMzQyxJQUFJLENBQUMsWUFBWSxDQUFDLFlBQVksQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUN4QyxDQUFDOzs7T0FBQTs7Z0JBbkJGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsZUFBZTtvQkFDekIsU0FBUyxFQUFFLENBQUMsWUFBWSxDQUFDO2lCQUMxQjs7O2dCQWhDcUMsVUFBVTtnQkFBckIsU0FBUztnQkFFM0IsWUFBWTs7O3dCQTRDbEIsS0FBSyxTQUFDLGFBQWE7O0lBR3RCLHFCQUFDO0NBQUEsQUFwQkQsSUFvQkM7U0FoQlksY0FBYzs7Ozs7O0lBUXZCLG9DQUE4Qjs7Ozs7SUFDOUIsbUNBQTRCOzs7OztJQUM1QixzQ0FBa0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIElucHV0LCBSZW5kZXJlcjIsIEVsZW1lbnRSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgQ29sb3JTZXJ2aWNlIH0gZnJvbSAnLi9jb2xvci5zZXJ2aWNlJztcblxuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiAnW21rQ29sb3JdJyxcbiAgcHJvdmlkZXJzOiBbQ29sb3JTZXJ2aWNlXVxufSlcbmV4cG9ydCBjbGFzcyBCYWNrZ3JvdW5kQ29sb3JEaXJlY3RpdmUge1xuICAvKipcbiAgICogQG1ldGhvZCBjb25zdHJ1Y3RvclxuICAgKiBAcGFyYW0gZWxlbWVudFJlZiAgIFtkZXNjcmlwdGlvbl1cbiAgICogQHBhcmFtIHJlbmRlcmVyMiAgICBbZGVzY3JpcHRpb25dXG4gICAqIEBwYXJhbSBjb2xvclNlcnZpY2UgW2Rlc2NyaXB0aW9uXVxuICAgKi9cbiAgY29uc3RydWN0b3IoXG4gICAgcHJpdmF0ZSBlbGVtZW50UmVmOiBFbGVtZW50UmVmLFxuICAgIHByaXZhdGUgcmVuZGVyZXIyOiBSZW5kZXJlcjIsXG4gICAgcHJpdmF0ZSBjb2xvclNlcnZpY2U6IENvbG9yU2VydmljZVxuICApIHt9XG5cbiAgQElucHV0KCdta0NvbG9yQ29uZGl0aW9uJykgY29uZGl0aW9uID0gdHJ1ZTtcbiAgQElucHV0KCdta0NvbG9yUHJlZml4JykgcHJlZml4OiBzdHJpbmc7XG4gIEBJbnB1dCgnbWtDb2xvclByb3BlcnR5JykgcHJvcGVydHk6IHN0cmluZztcbiAgQElucHV0KCdta0NvbG9yJykgc2V0IGNvbG9yKGNvbG9yOiBzdHJpbmcpIHtcbiAgICB0aGlzLmNvbG9yU2VydmljZS5zZXRCYWNrZ3JvdW5kQ29sb3IoY29sb3IsIHRoaXMuY29uZGl0aW9uLCB0aGlzLnByb3BlcnR5LCB0aGlzLnByZWZpeCk7XG4gIH1cbn1cblxuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiAnW21rRm9udENvbG9yXScsXG4gIHByb3ZpZGVyczogW0NvbG9yU2VydmljZV1cbn0pXG5leHBvcnQgY2xhc3MgQ29sb3JEaXJlY3RpdmUge1xuICAvKipcbiAgICogQG1ldGhvZCBjb25zdHJ1Y3RvclxuICAgKiBAcGFyYW0gZWxlbWVudFJlZiAgIFtkZXNjcmlwdGlvbl1cbiAgICogQHBhcmFtIHJlbmRlcmVyMiAgICBbZGVzY3JpcHRpb25dXG4gICAqIEBwYXJhbSBjb2xvclNlcnZpY2UgW2Rlc2NyaXB0aW9uXVxuICAgKi9cbiAgY29uc3RydWN0b3IoXG4gICAgcHJpdmF0ZSBlbGVtZW50UmVmOiBFbGVtZW50UmVmLFxuICAgIHByaXZhdGUgcmVuZGVyZXIyOiBSZW5kZXJlcjIsXG4gICAgcHJpdmF0ZSBjb2xvclNlcnZpY2U6IENvbG9yU2VydmljZVxuICApIHt9XG5cbiAgQElucHV0KCdta0ZvbnRDb2xvcicpIHNldCBjb2xvcihjb2xvcjogc3RyaW5nKSB7XG4gICAgdGhpcy5jb2xvclNlcnZpY2Uuc2V0Rm9udENvbG9yKGNvbG9yKTtcbiAgfVxufVxuIl19