/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Renderer2, ElementRef, NgZone } from '@angular/core';
import { throttle, removeSubscriptions, removeListeners } from '../../helpers';
import { LayoutStore } from '../layout.store';
import { WrapperService } from './wrapper.service';
var WrapperComponent = /** @class */ (function () {
    function WrapperComponent(elementRef, renderer2, layoutStore, wrapperService, ngZone) {
        this.elementRef = elementRef;
        this.renderer2 = renderer2;
        this.layoutStore = layoutStore;
        this.wrapperService = wrapperService;
        this.ngZone = ngZone;
        this.listeners = [];
        this.subscriptions = [];
    }
    /**
     * [ngOnInit description]
     * @method ngOnInit
     */
    /**
     * [ngOnInit description]
     * \@method ngOnInit
     * @return {?}
     */
    WrapperComponent.prototype.ngOnInit = /**
     * [ngOnInit description]
     * \@method ngOnInit
     * @return {?}
     */
    function () {
        var _this = this;
        this.layoutStore.setWindowInnerHeight(window.innerHeight);
        this.layoutStore.setWindowInnerWidth(window.innerWidth);
        this.wrapperService.wrapperElementRef = this.elementRef;
        this.subscriptions.push(this.layoutStore.wrapperClasses.subscribe(function (value) {
            _this.classes = value ? value : null;
        }));
        this.ngZone.runOutsideAngular(function () {
            _this.listeners.push(_this.renderer2.listen('window', 'resize', throttle(function () {
                _this.layoutStore.setWindowInnerHeight(window.innerHeight);
                _this.layoutStore.setWindowInnerWidth(window.innerWidth);
            }, 250)));
        });
        this.subscriptions.push(this.layoutStore.layout.subscribe(function (value) {
            value === 'fixed' ? _this.renderer2.addClass(_this.elementRef.nativeElement, 'fixed') :
                _this.renderer2.removeClass(_this.elementRef.nativeElement, 'fixed');
            value === 'boxed' ? _this.renderer2.addClass(_this.elementRef.nativeElement, 'layout-boxed') :
                _this.renderer2.removeClass(_this.elementRef.nativeElement, 'layout-boxed');
        }));
        this.subscriptions.push(this.layoutStore.skin.subscribe(function (value) {
            if (value) {
                if (_this.skin && _this.skin !== value) {
                    _this.renderer2.removeClass(_this.elementRef.nativeElement, "skin-" + _this.skin);
                }
                _this.skin = value;
                _this.renderer2.addClass(_this.elementRef.nativeElement, "skin-" + _this.skin);
            }
        }));
    };
    /**
     * @method ngOnDestroy
     */
    /**
     * \@method ngOnDestroy
     * @return {?}
     */
    WrapperComponent.prototype.ngOnDestroy = /**
     * \@method ngOnDestroy
     * @return {?}
     */
    function () {
        this.subscriptions = removeSubscriptions(this.subscriptions);
        this.listeners = removeListeners(this.listeners);
    };
    WrapperComponent.decorators = [
        { type: Component, args: [{
                    selector: 'mk-layout-wrapper',
                    template: "<div class=\"wrapper overflow\" [ngClass]=\"classes\">\n  <ng-content></ng-content>\n</div>\n",
                    styles: [".wrapper.overflow{overflow:hidden}:host{display:block}:host /deep/ .sidebar-right-toggle>a{color:#fff}:host.sidebar-mini.sidebar-collapse /deep/ .treeview-menu.collapsing{height:auto!important}:host /deep/ .sidebar-right-toggle>a:hover{background:rgba(0,0,0,.1)}:host.skin-black /deep/ .sidebar-right-toggle>a,:host.skin-black-light /deep/ .sidebar-right-toggle>a{color:#333;border-right-width:0}:host.skin-black /deep/ .sidebar-right-toggle>a:hover,:host.skin-black-light /deep/ .sidebar-right-toggle>a:hover{background-color:#fff;color:#999}:host.skin-black /deep/ .sidebar-right-toggle>a{border-left:1px solid #eee}:host.skin-black-light /deep/ .sidebar-right-toggle>a{border-left:1px solid #d2d6de}"]
                },] },
    ];
    WrapperComponent.ctorParameters = function () { return [
        { type: ElementRef },
        { type: Renderer2 },
        { type: LayoutStore },
        { type: WrapperService },
        { type: NgZone }
    ]; };
    return WrapperComponent;
}());
export { WrapperComponent };
if (false) {
    /**
     * @type {?}
     * @private
     */
    WrapperComponent.prototype.skin;
    /**
     * @type {?}
     * @private
     */
    WrapperComponent.prototype.listeners;
    /**
     * @type {?}
     * @private
     */
    WrapperComponent.prototype.subscriptions;
    /** @type {?} */
    WrapperComponent.prototype.classes;
    /**
     * @type {?}
     * @private
     */
    WrapperComponent.prototype.elementRef;
    /**
     * @type {?}
     * @private
     */
    WrapperComponent.prototype.renderer2;
    /**
     * @type {?}
     * @private
     */
    WrapperComponent.prototype.layoutStore;
    /**
     * @type {?}
     * @private
     */
    WrapperComponent.prototype.wrapperService;
    /**
     * @type {?}
     * @private
     */
    WrapperComponent.prototype.ngZone;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid3JhcHBlci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9hbmd1bGFyLWFkbWluLWx0ZS8iLCJzb3VyY2VzIjpbImxpYi9sYXlvdXQvd3JhcHBlci93cmFwcGVyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBVSxTQUFTLEVBQUUsVUFBVSxFQUFFLE1BQU0sRUFBYSxNQUFNLGVBQWUsQ0FBQztBQUU1RixPQUFPLEVBQUUsUUFBUSxFQUFFLG1CQUFtQixFQUFFLGVBQWUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMvRSxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDOUMsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBRW5EO0lBZUUsMEJBQ1UsVUFBc0IsRUFDdEIsU0FBb0IsRUFDcEIsV0FBd0IsRUFDeEIsY0FBOEIsRUFDOUIsTUFBYztRQUpkLGVBQVUsR0FBVixVQUFVLENBQVk7UUFDdEIsY0FBUyxHQUFULFNBQVMsQ0FBVztRQUNwQixnQkFBVyxHQUFYLFdBQVcsQ0FBYTtRQUN4QixtQkFBYyxHQUFkLGNBQWMsQ0FBZ0I7UUFDOUIsV0FBTSxHQUFOLE1BQU0sQ0FBUTtRQVZoQixjQUFTLEdBQUcsRUFBRSxDQUFDO1FBQ2Ysa0JBQWEsR0FBRyxFQUFFLENBQUM7SUFVeEIsQ0FBQztJQUVKOzs7T0FHRzs7Ozs7O0lBQ0gsbUNBQVE7Ozs7O0lBQVI7UUFBQSxpQkFpQ0M7UUFoQ0MsSUFBSSxDQUFDLFdBQVcsQ0FBQyxvQkFBb0IsQ0FBQyxNQUFNLENBQUMsV0FBVyxDQUFDLENBQUM7UUFDMUQsSUFBSSxDQUFDLFdBQVcsQ0FBQyxtQkFBbUIsQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUFDLENBQUM7UUFFeEQsSUFBSSxDQUFDLGNBQWMsQ0FBQyxpQkFBaUIsR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDO1FBRXhELElBQUksQ0FBQyxhQUFh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V0FBVztnQkFDWCxjQUFjO2dCQUo0QixNQUFNOztJQTJFekQsdUJBQUM7Q0FBQSxBQXJFRCxJQXFFQztTQTdEWSxnQkFBZ0I7Ozs7OztJQUMzQixnQ0FBcUI7Ozs7O0lBQ3JCLHFDQUF1Qjs7Ozs7SUFDdkIseUNBQTJCOztJQUUzQixtQ0FBdUI7Ozs7O0lBR3JCLHNDQUE4Qjs7Ozs7SUFDOUIscUNBQTRCOzs7OztJQUM1Qix1Q0FBZ0M7Ozs7O0lBQ2hDLDBDQUFzQzs7Ozs7SUFDdEMsa0NBQXNCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQsIFJlbmRlcmVyMiwgRWxlbWVudFJlZiwgTmdab25lLCBPbkRlc3Ryb3kgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgdGhyb3R0bGUsIHJlbW92ZVN1YnNjcmlwdGlvbnMsIHJlbW92ZUxpc3RlbmVycyB9IGZyb20gJy4uLy4uL2hlbHBlcnMnO1xuaW1wb3J0IHsgTGF5b3V0U3RvcmUgfSBmcm9tICcuLi9sYXlvdXQuc3RvcmUnO1xuaW1wb3J0IHsgV3JhcHBlclNlcnZpY2UgfSBmcm9tICcuL3dyYXBwZXIuc2VydmljZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ21rLWxheW91dC13cmFwcGVyJyxcbiAgdGVtcGxhdGU6IGA8ZGl2IGNsYXNzPVwid3JhcHBlciBvdmVyZmxvd1wiIFtuZ0NsYXNzXT1cImNsYXNzZXNcIj5cbiAgPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PlxuPC9kaXY+XG5gLFxuICBzdHlsZXM6IFtgLndyYXBwZXIub3ZlcmZsb3d7b3ZlcmZsb3c6aGlkZGVufTpob3N0e2Rpc3BsYXk6YmxvY2t9Omhvc3QgL2RlZXAvIC5zaWRlYmFyLXJpZ2h0LXRvZ2dsZT5he2NvbG9yOiNmZmZ9Omhvc3Quc2lkZWJhci1taW5pLnNpZGViYXItY29sbGFwc2UgL2RlZXAvIC50cmVldmlldy1tZW51LmNvbGxhcHNpbmd7aGVpZ2h0OmF1dG8haW1wb3J0YW50fTpob3N0IC9kZWVwLyAuc2lkZWJhci1yaWdodC10b2dnbGU+YTpob3ZlcntiYWNrZ3JvdW5kOnJnYmEoMCwwLDAsLjEpfTpob3N0LnNraW4tYmxhY2sgL2RlZXAvIC5zaWRlYmFyLXJpZ2h0LXRvZ2dsZT5hLDpob3N0LnNraW4tYmxhY2stbGlnaHQgL2RlZXAvIC5zaWRlYmFyLXJpZ2h0LXRvZ2dsZT5he2NvbG9yOiMzMzM7Ym9yZGVyLXJpZ2h0LXdpZHRoOjB9Omhvc3Quc2tpbi1ibGFjayAvZGVlcC8gLnNpZGViYXItcmlnaHQtdG9nZ2xlPmE6aG92ZXIsOmhvc3Quc2tpbi1ibGFjay1saWdodCAvZGVlcC8gLnNpZGViYXItcmlnaHQtdG9nZ2xlPmE6aG92ZXJ7YmFja2dyb3VuZC1jb2xvcjojZmZmO2NvbG9yOiM5OTl9Omhvc3Quc2tpbi1ibGFjayAvZGVlcC8gLnNpZGViYXItcmlnaHQtdG9nZ2xlPmF7Ym9yZGVyLWxlZnQ6MXB4IHNvbGlkICNlZWV9Omhvc3Quc2tpbi1ibGFjay1saWdodCAvZGVlcC8gLnNpZGViYXItcmlnaHQtdG9nZ2xlPmF7Ym9yZGVyLWxlZnQ6MXB4IHNvbGlkICNkMmQ2ZGV9YF1cbn0pXG5leHBvcnQgY2xhc3MgV3JhcHBlckNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95IHtcbiAgcHJpdmF0ZSBza2luOiBzdHJpbmc7XG4gIHByaXZhdGUgbGlzdGVuZXJzID0gW107XG4gIHByaXZhdGUgc3Vic2NyaXB0aW9ucyA9IFtdO1xuXG4gIHB1YmxpYyBjbGFzc2VzOiBzdHJpbmc7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHJpdmF0ZSBlbGVtZW50UmVmOiBFbGVtZW50UmVmLFxuICAgIHByaXZhdGUgcmVuZGVyZXIyOiBSZW5kZXJlcjIsXG4gICAgcHJpdmF0ZSBsYXlvdXRTdG9yZTogTGF5b3V0U3RvcmUsXG4gICAgcHJpdmF0ZSB3cmFwcGVyU2VydmljZTogV3JhcHBlclNlcnZpY2UsXG4gICAgcHJpdmF0ZSBuZ1pvbmU6IE5nWm9uZVxuICApIHt9XG5cbiAgLyoqXG4gICAqIFtuZ09uSW5pdCBkZXNjcmlwdGlvbl1cbiAgICogQG1ldGhvZCBuZ09uSW5pdFxuICAgKi9cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5sYXlvdXRTdG9yZS5zZXRXaW5kb3dJbm5lckhlaWdodCh3aW5kb3cuaW5uZXJIZWlnaHQpO1xuICAgIHRoaXMubGF5b3V0U3RvcmUuc2V0V2luZG93SW5uZXJXaWR0aCh3aW5kb3cuaW5uZXJXaWR0aCk7XG5cbiAgICB0aGlzLndyYXBwZXJTZXJ2aWNlLndyYXBwZXJFbGVtZW50UmVmID0gdGhpcy5lbGVtZW50UmVmO1xuXG4gICAgdGhpcy5zdWJzY3JpcHRpb25zLnB1c2godGhpcy5sYXlvdXRTdG9yZS53cmFwcGVyQ2xhc3Nlcy5zdWJzY3JpYmUoKHZhbHVlOiBzdHJpbmcpID0+IHtcbiAgICAgIHRoaXMuY2xhc3NlcyA9IHZhbHVlID8gdmFsdWUgOiBudWxsO1xuICAgIH0pKTtcblxuICAgIHRoaXMubmdab25lLnJ1bk91dHNpZGVBbmd1bGFyKCgpID0+IHtcbiAgICAgIHRoaXMubGlzdGVuZXJzLnB1c2godGhpcy5yZW5kZXJlcjIubGlzdGVuKCd3aW5kb3cnLCAncmVzaXplJywgdGhyb3R0bGUoKCkgPT4ge1xuICAgICAgICB0aGlzLmxheW91dFN0b3JlLnNldFdpbmRvd0lubmVySGVpZ2h0KHdpbmRvdy5pbm5lckhlaWdodCk7XG4gICAgICAgIHRoaXMubGF5b3V0U3RvcmUuc2V0V2luZG93SW5uZXJXaWR0aCh3aW5kb3cuaW5uZXJXaWR0aCk7XG4gICAgICB9LCAyNTApKSk7XG4gICAgfSk7XG5cbiAgICB0aGlzLnN1YnNjcmlwdGlvbnMucHVzaCh0aGlzLmxheW91dFN0b3JlLmxheW91dC5zdWJzY3JpYmUoKHZhbHVlOiBzdHJpbmcpID0+IHtcbiAgICAgIHZhbHVlID09PSAnZml4ZWQnID8gdGhpcy5yZW5kZXJlcjIuYWRkQ2xhc3ModGhpcy5lbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQsICdmaXhlZCcpIDpcbiAgICAgICAgdGhpcy5yZW5kZXJlcjIucmVtb3ZlQ2xhc3ModGhpcy5lbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQsICdmaXhlZCcpO1xuICAgICAgdmFsdWUgPT09ICdib3hlZCcgPyB0aGlzLnJlbmRlcmVyMi5hZGRDbGFzcyh0aGlzLmVsZW1lbnRSZWYubmF0aXZlRWxlbWVudCwgJ2xheW91dC1ib3hlZCcpIDpcbiAgICAgICAgdGhpcy5yZW5kZXJlcjIucmVtb3ZlQ2xhc3ModGhpcy5lbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQsICdsYXlvdXQtYm94ZWQnKTtcbiAgICB9KSk7XG5cbiAgICB0aGlzLnN1YnNjcmlwdGlvbnMucHVzaCh0aGlzLmxheW91dFN0b3JlLnNraW4uc3Vic2NyaWJlKCh2YWx1ZTogc3RyaW5nKSA9PiB7XG4gICAgICBpZiAodmFsdWUpIHtcbiAgICAgICAgaWYgKHRoaXMuc2tpbiAmJiB0aGlzLnNraW4gIT09IHZhbHVlKSB7XG4gICAgICAgICAgdGhpcy5yZW5kZXJlcjIucmVtb3ZlQ2xhc3ModGhpcy5lbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQsIGBza2luLSR7dGhpcy5za2lufWApO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuc2tpbiA9IHZhbHVlO1xuICAgICAgICB0aGlzLnJlbmRlcmVyMi5hZGRDbGFzcyh0aGlzLmVsZW1lbnRSZWYubmF0aXZlRWxlbWVudCwgYHNraW4tJHt0aGlzLnNraW59YCk7XG4gICAgICB9XG4gICAgfSkpO1xuICB9XG5cbiAgLyoqXG4gICAqIEBtZXRob2QgbmdPbkRlc3Ryb3lcbiAgICovXG4gIG5nT25EZXN0cm95KCkge1xuICAgIHRoaXMuc3Vic2NyaXB0aW9ucyA9IHJlbW92ZVN1YnNjcmlwdGlvbnModGhpcy5zdWJzY3JpcHRpb25zKTtcbiAgICB0aGlzLmxpc3RlbmVycyA9IHJlbW92ZUxpc3RlbmVycyh0aGlzLmxpc3RlbmVycyk7XG4gIH1cbn1cbiJdfQ==