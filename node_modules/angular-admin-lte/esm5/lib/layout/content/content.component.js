/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ChangeDetectionStrategy, ChangeDetectorRef, ViewChild, ElementRef } from '@angular/core';
import { Router, NavigationStart, NavigationEnd } from '@angular/router';
import { Title } from '@angular/platform-browser';
import { LayoutStore } from '../layout.store';
import { RoutingService } from '../../services/routing.service';
import { SidebarRightService } from '../sidebar-right/sidebar-right.service';
import { HeaderService } from '../header/header.service';
import { FooterService } from '../footer/footer.service';
import { removeSubscriptions } from '../../helpers';
var ContentComponent = /** @class */ (function () {
    /**
     * @method constructor
     * @param layoutStore
     * @param routingService
     * @param titleService
     * @param elementRef
     * @param changeDetectorRef
     * @param sidebarRightService
     * @param headerService
     * @param footerService
     * @param router
     */
    function ContentComponent(layoutStore, routingService, titleService, elementRef, changeDetectorRef, sidebarRightService, headerService, footerService, router) {
        this.layoutStore = layoutStore;
        this.routingService = routingService;
        this.titleService = titleService;
        this.elementRef = elementRef;
        this.changeDetectorRef = changeDetectorRef;
        this.sidebarRightService = sidebarRightService;
        this.headerService = headerService;
        this.footerService = footerService;
        this.router = router;
        this.subscriptions = [];
    }
    /**
     * @method ngOnInit
     */
    /**
     * \@method ngOnInit
     * @return {?}
     */
    ContentComponent.prototype.ngOnInit = /**
     * \@method ngOnInit
     * @return {?}
     */
    function () {
        var _this = this;
        this.titleTag = this.titleService.getTitle();
        this.subscriptions.push(this.routingService.onChange.subscribe(function (value) {
            if (value && value[value.length - 1]) {
                _this.titleService.setTitle(_this.getTitle(value[value.length - 1].data['title']));
                _this.header = value[value.length - 1].data['title'];
                _this.description = value[value.length - 1].data['description'];
            }
            _this.changeDetectorRef.markForCheck();
        }));
        this.subscriptions.push(this.router.events.subscribe(function (routeEvent) {
            if (routeEvent instanceof NavigationStart) {
                _this.navigationEnd = false;
            }
            if (routeEvent instanceof NavigationEnd) {
                _this.navigationEnd = true;
                _this.setContentMinHeight();
            }
        }));
        this.subscriptions.push(this.layoutStore.sidebarLeftElementHeight.subscribe(function (value) {
            _this.sidebarLeftHeight = value;
            _this.setContentMinHeight();
        }));
        this.subscriptions.push(this.layoutStore.layout.subscribe(function (value) {
            _this.layout = value;
            _this.setContentMinHeight();
        }));
        this.subscriptions.push(this.layoutStore.windowInnerHeight.subscribe(function (value) {
            _this.windowInnerHeight = value;
            _this.setContentMinHeight();
        }));
        this.heightStyle = this.windowInnerHeight;
    };
    /**
     * @method ngOnDestroy
     */
    /**
     * \@method ngOnDestroy
     * @return {?}
     */
    ContentComponent.prototype.ngOnDestroy = /**
     * \@method ngOnDestroy
     * @return {?}
     */
    function () {
        this.subscriptions = removeSubscriptions(this.subscriptions);
    };
    Object.defineProperty(ContentComponent.prototype, "scrollHeight", {
        /**
         * [scrollHeight description]
         * @method scrollHeight
         * @return [description]
         */
        get: /**
         * [scrollHeight description]
         * \@method scrollHeight
         * @return {?} [description]
         */
        function () {
            return this.contentInnerElement.nativeElement.scrollHeight;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * [getTitle description]
     * @method getTitle
     * @param title [description]
     * @return [description]
     */
    /**
     * [getTitle description]
     * \@method getTitle
     * @private
     * @param {?} title [description]
     * @return {?} [description]
     */
    ContentComponent.prototype.getTitle = /**
     * [getTitle description]
     * \@method getTitle
     * @private
     * @param {?} title [description]
     * @return {?} [description]
     */
    function (title) {
        return title ? title + " - " + this.titleTag : this.titleTag;
    };
    /**
     * [setMinHeight description]
     * @method setMinHeight
     */
    /**
     * [setMinHeight description]
     * \@method setMinHeight
     * @private
     * @return {?}
     */
    ContentComponent.prototype.setContentMinHeight = /**
     * [setMinHeight description]
     * \@method setMinHeight
     * @private
     * @return {?}
     */
    function () {
        if (this.navigationEnd) {
            /** @type {?} */
            var heightStyle = void 0;
            /** @type {?} */
            var headerFooterOffsetHeight = this.headerService.offsetHeight + this.footerService.offsetHeight;
            if (this.layout === 'fixed') {
                heightStyle = this.windowInnerHeight - this.footerService.offsetHeight;
            }
            else {
                /** @type {?} */
                var sidebarRight = this.sidebarRightService.scrollHeight ?
                    this.sidebarRightService.scrollHeight - this.headerService.offsetHeight : 0;
                heightStyle = Math.max(this.windowInnerHeight - headerFooterOffsetHeight, this.sidebarLeftHeight - this.headerService.offsetHeight, sidebarRight);
            }
            if (heightStyle && heightStyle !== this.heightStyle) {
                if (this.scrollHeight > heightStyle) {
                    heightStyle = null;
                }
                this.heightStyle = heightStyle;
                this.changeDetectorRef.detectChanges();
            }
        }
    };
    ContentComponent.decorators = [
        { type: Component, args: [{
                    selector: 'mk-layout-content',
                    template: "<div class=\"content-wrapper\" [style.min-height.px]=\"heightStyle\">\n  <div #contentInnerElement class=\"content-inner\">\n    <ng-content select=\"[mk-layout-content-before-header]\"></ng-content>\n    <section *ngIf=\"header || description\" class=\"content-header\">\n      <h1>\n        {{header}}\n        <small *ngIf=\"description\">{{description}}</small>\n      </h1>\n      <mk-breadcrumbs></mk-breadcrumbs>\n    </section>\n    <ng-content select=\"[mk-layout-content-after-header]\"></ng-content>\n    <section class=\"content\">\n      <ng-content></ng-content>\n    </section>\n  </div>\n</div>\n",
                    styles: [":host{display:block}.content-wrapper{position:relative}"],
                    changeDetection: ChangeDetectionStrategy.OnPush
                },] },
    ];
    ContentComponent.ctorParameters = function () { return [
        { type: LayoutStore },
        { type: RoutingService },
        { type: Title },
        { type: ElementRef },
        { type: ChangeDetectorRef },
        { type: SidebarRightService },
        { type: HeaderService },
        { type: FooterService },
        { type: Router }
    ]; };
    ContentComponent.propDecorators = {
        contentInnerElement: [{ type: ViewChild, args: ['contentInnerElement',] }]
    };
    return ContentComponent;
}());
export { ContentComponent };
if (false) {
    /** @type {?} */
    ContentComponent.prototype.description;
    /** @type {?} */
    ContentComponent.prototype.header;
    /** @type {?} */
    ContentComponent.prototype.heightStyle;
    /** @type {?} */
    ContentComponent.prototype.sidebarLeftHeight;
    /** @type {?} */
    ContentComponent.prototype.windowInnerHeight;
    /**
     * @type {?}
     * @private
     */
    ContentComponent.prototype.layout;
    /**
     * @type {?}
     * @private
     */
    ContentComponent.prototype.titleTag;
    /**
     * @type {?}
     * @private
     */
    ContentComponent.prototype.navigationEnd;
    /**
     * @type {?}
     * @private
     */
    ContentComponent.prototype.subscriptions;
    /**
     * @type {?}
     * @private
     */
    ContentComponent.prototype.contentInnerElement;
    /**
     * @type {?}
     * @private
     */
    ContentComponent.prototype.layoutStore;
    /**
     * @type {?}
     * @private
     */
    ContentComponent.prototype.routingService;
    /**
     * @type {?}
     * @private
     */
    ContentComponent.prototype.titleService;
    /**
     * @type {?}
     * @private
     */
    ContentComponent.prototype.elementRef;
    /**
     * @type {?}
     * @private
     */
    ContentComponent.prototype.changeDetectorRef;
    /**
     * @type {?}
     * @private
     */
    ContentComponent.prototype.sidebarRightService;
    /**
     * @type {?}
     * @private
     */
    ContentComponent.prototype.headerService;
    /**
     * @type {?}
     * @private
     */
    ContentComponent.prototype.footerService;
    /**
     * @type {?}
     * @private
     */
    ContentComponent.prototype.router;
}
//# sourceMappingURL=data:application/json;base64,